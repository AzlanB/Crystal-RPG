#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ The\ playable\ character\r\n
comment1.params=name\ attackMessage
comment1.target=Player(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Creates\ the\ starting\ player\ with\ the\ appropriate\ name\ and\ attack\ message.\r\n\ All\ stats\ are\ set\ to\ 5\ with\ the\ exception\ of\ health\ which\ is\ 10.\ Level\ is\ 1,\r\n\ and\ exp,\ gold,\ and\ fatigue\ is\ 0.\ The\ inventory\ and\ equipped\ items\ arraylists\ are\ empty.\r\n
comment10.params=
comment10.target=int\ getBaseHealth()
comment10.text=\r\n\ Returns\ the\ player's\ base\ health\r\n
comment11.params=cha
comment11.target=void\ setBaseCharm(int)
comment11.text=\r\n\ Sets\ the\ player's\ base\ charm\ to\ cha\r\n
comment12.params=
comment12.target=int\ getBaseCharm()
comment12.text=\r\n\ Returns\ the\ player's\ base\ charm\r\n
comment13.params=cha
comment13.target=void\ setCharm(int)
comment13.text=\r\n\ Sets\ the\ player's\ charm\ to\ cha\r\n
comment14.params=
comment14.target=int\ getCharm()
comment14.text=\r\n\ Returns\ the\ player's\ charm\r\n
comment15.params=exp
comment15.target=void\ setExp(int)
comment15.text=\r\n\ Sets\ the\ player's\ exp\ to\ exp\r\n
comment16.params=
comment16.target=int\ getExp()
comment16.text=\r\n\ Returns\ the\ player's\ exp\r\n
comment17.params=
comment17.target=int\ getLevel()
comment17.text=\r\n\ Returns\ the\ player's\ level\r\n
comment18.params=f
comment18.target=void\ setFatigue(int)
comment18.text=\r\n\ Sets\ the\ player's\ fatigue\ to\ f\ and\ notifies\ the\ player\ should\ be\ checked\ for\ if\ it\ could\ be\ close\ to\ death\ from\ fatigue\r\n
comment19.params=
comment19.target=int\ getFatigue()
comment19.text=\r\n\ Returns\ the\ numerical\ value\ of\ the\ player's\ fatigue\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\r\n\ Returns\ a\ formatted\ string\ with\ the\ name,\ current\ health,\ max\ health,\ strength,\ agility,\ defense,\r\n\ charm,\ gold,\ level,\ and\ exp\ of\ the\ player\r\n
comment20.params=
comment20.target=java.lang.String\ getFatigueLevel()
comment20.text=\r\n\ Returns\ a\ string\ based\ on\ how\ much\ fatigue\ the\ player\ has\r\n
comment21.params=g
comment21.target=void\ setGold(int)
comment21.text=\r\n\ Sets\ the\ player's\ gold\ to\ g\r\n
comment22.params=
comment22.target=int\ getGold()
comment22.text=\r\n\ Returns\ the\ player's\ gold\r\n
comment23.params=
comment23.target=int\ getNeededExp()
comment23.text=\r\n\ Returns\ how\ much\ exp\ the\ player\ needs\ to\ level\ up\r\n
comment24.params=
comment24.target=void\ levelUp()
comment24.text=\r\n\ Levels\ up\ the\ player\r\n
comment25.params=i
comment25.target=void\ store(Item)
comment25.text=\r\n\ Adds\ an\ item\ to\ the\ inventory\r\n
comment26.params=i
comment26.target=boolean\ retrieve(Item)
comment26.text=\r\n\ Removes\ an\ item\ from\ the\ inventory,\ returning\ a\ boolean\ depending\ on\ if\ it\ was\ successful\r\n
comment27.params=i
comment27.target=boolean\ retrieve(int)
comment27.text=\r\n\ Removes\ the\ item\ at\ the\ specified\ index\ of\ the\ inventory,\ returning\ a\ boolean\ depending\ on\ if\ it\ was\ successful\r\n
comment28.params=
comment28.target=int\ getInvSize()
comment28.text=\r\n\ Returns\ how\ many\ items\ are\ in\ the\ player's\ inventory\r\n
comment29.params=
comment29.target=java.lang.String\ getInv()
comment29.text=\r\n\ Returns\ a\ string\ with\ the\ contents\ of\ the\ inventory\r\n
comment3.params=str
comment3.target=void\ setBaseStrength(int)
comment3.text=\r\n\ Sets\ the\ player's\ base\ strength\ to\ str\r\n
comment30.params=i
comment30.target=boolean\ hasItem(Item)
comment30.text=\r\n\ Returns\ whether\ or\ not\ the\ player\ has\ the\ specified\ item\ in\ their\ inventory\r\n
comment31.params=i
comment31.target=Item\ getItem(int)
comment31.text=\r\n\ Returns\ the\ item\ at\ the\ index\ in\ the\ inventory\r\n
comment32.params=
comment32.target=java.lang.String\ getEquipped()
comment32.text=\r\n\ Returns\ a\ string\ with\ the\ contents\ of\ the\ equipped\ items\r\n
comment33.params=i
comment33.target=boolean\ use(int)
comment33.text=\r\n\ Uses\ a\ buffing\ item\ in\ the\ inventory,\ returning\ whether\ it\ was\ successful\r\n
comment34.params=i
comment34.target=boolean\ unequip(int)
comment34.text=\r\n\ Puts\ an\ equipped\ item\ back\ in\ the\ inventory,\ returning\ a\ boolean\ depending\ on\ if\ it\ was\ successful\r\n
comment35.params=i
comment35.target=boolean\ equip(int)
comment35.text=\r\n\ Equips\ an\ item\ from\ the\ inventory,\ returning\ a\ boolean\ depending\ on\ if\ it\ was\ successful\r\n
comment36.params=
comment36.target=void\ tickAll()
comment36.text=\r\n\ Applies\ a\ tick\ to\ every\ currently\ active\ BuffingItem\r\n
comment37.params=
comment37.target=int\ getTimesThreatened()
comment37.text=\r\n\ Returns\ the\ number\ of\ times\ the\ player\ has\ been\ threatened\r\n
comment38.params=
comment38.target=void\ refreshStats()
comment38.text=\r\n\ Recalculates\ the\ player's\ current\ stats,\ including\ item\ bonuses,\ fatigue\ penalties,\ etc.\r\n
comment4.params=
comment4.target=int\ getBaseStrength()
comment4.text=\r\n\ Returns\ the\ player's\ base\ strength\r\n
comment5.params=agi
comment5.target=void\ setBaseAgility(int)
comment5.text=\r\n\ Sets\ the\ player's\ base\ agility\ to\ agi\r\n
comment6.params=
comment6.target=int\ getBaseAgility()
comment6.text=\r\n\ Returns\ the\ player's\ base\ agility\r\n
comment7.params=def
comment7.target=void\ setBaseDefense(int)
comment7.text=\r\n\ Sets\ the\ player's\ base\ defense\ to\ def\r\n
comment8.params=
comment8.target=int\ getBaseDefense()
comment8.text=\r\n\ Returns\ the\ player's\ base\ defense\r\n
comment9.params=hp
comment9.target=void\ setBaseHealth(int)
comment9.text=\r\n\ Sets\ the\ player's\ base\ health\ to\ hp\r\n
numComments=39
